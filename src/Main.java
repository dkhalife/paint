
import Shapes.Ellipse;
import Shapes.Rectangle;
import Shapes.Shape;
import Shapes.Triangle;
import java.util.ArrayList;
import javax.swing.ButtonGroup;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Main.java
 *
 * Created on Apr 15, 2014, 3:10:48 PM
 */
/**
 *
 * @author Dany
 */
public class Main extends javax.swing.JFrame {
    private Shape currentShape;
    private ArrayList<Shape> shapes = new ArrayList<Shape>();
    
    private final String ACTION_TRIANGLE = "0";
    private final String ACTION_RECTANGLE = "1";
    private final String ACTION_ELLIPSE = "2";
    
    /** Creates new form Main */
    public Main() {
        initComponents();
        
        triangle.setActionCommand(ACTION_TRIANGLE);
        rectangle.setActionCommand(ACTION_RECTANGLE);
        ellipse.setActionCommand(ACTION_ELLIPSE);
        
        availableShapes = new ButtonGroup();
        availableShapes.add(triangle);
        availableShapes.add(rectangle);
        availableShapes.add(ellipse);
        availableShapes.setSelected(triangle.getModel(), true);
    }
    
    public Shape getCurrentShape(){
        return currentShape;
    }
    
    public ArrayList<Shape> getShapes() {
        return shapes;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        triangle = new javax.swing.JToggleButton();
        rectangle = new javax.swing.JToggleButton();
        ellipse = new javax.swing.JToggleButton();
        color1 = new javax.swing.JButton();
        color2 = new javax.swing.JButton();
        border = new javax.swing.JComboBox();
        fill = new javax.swing.JComboBox();
        panel = new Panel(this);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        triangle.setText("Triangle");
        triangle.setFocusable(false);
        triangle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        triangle.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(triangle);

        rectangle.setText("Rectangle");
        rectangle.setFocusable(false);
        rectangle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rectangle.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(rectangle);

        ellipse.setText("Ellipse");
        ellipse.setToolTipText("");
        ellipse.setFocusable(false);
        ellipse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ellipse.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(ellipse);

        color1.setText("Couleur 1");
        color1.setToolTipText("");
        color1.setFocusable(false);
        color1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        color1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(color1);

        color2.setText("Couleur 2");
        color2.setFocusable(false);
        color2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        color2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(color2);

        border.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Solid", "Dashed", "Dotted" }));
        border.setSelectedIndex(1);
        border.setToolTipText("");
        jToolBar1.add(border);

        fill.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Solid" }));
        fill.setSelectedIndex(1);
        jToolBar1.add(fill);

        panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panelMouseReleased(evt);
            }
        });
        panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 899, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 899, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void panelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseDragged
        currentShape.update(evt.getX(), evt.getY(), evt.isControlDown());
        panel.repaint();
    }//GEN-LAST:event_panelMouseDragged

    private void panelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseReleased
        if(!currentShape.validate())
            currentShape = null;
        else
            shapes.add(currentShape);
        
        panel.repaint();
    }//GEN-LAST:event_panelMouseReleased

    private void panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMousePressed
        String command = availableShapes.getSelection().getActionCommand();

        int x = evt.getX();
        int y = evt.getY();

        if(ACTION_TRIANGLE.equals(command)){
            currentShape = new Triangle(x, y);
        }
        else if(ACTION_RECTANGLE.equals(command)){
            currentShape = new Rectangle(x, y);
        }
        else if(ACTION_ELLIPSE.equals(command)){
            currentShape = new Ellipse(x, y);
        }        
    }//GEN-LAST:event_panelMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox border;
    private javax.swing.JButton color1;
    private javax.swing.JButton color2;
    private javax.swing.JToggleButton ellipse;
    private javax.swing.JComboBox fill;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel panel;
    private javax.swing.JToggleButton rectangle;
    private javax.swing.JToggleButton triangle;
    // End of variables declaration//GEN-END:variables
    private ButtonGroup availableShapes;
}
